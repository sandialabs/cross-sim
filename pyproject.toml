[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[project]
name = "CrossSim"
description = "Accuracy simulator for analog in-memory computing"
version = "3.2a1"
license = {text = "BSD 3-Clause License"}
dependencies = [
    "numpy",
    "scipy",
]

[tool.setuptools.packages]
find = {}

[tools.setuptools.packages.find]
include = ["simulator"]

[project.optional-dependencies]
gpu = ["cupy"]
dnn-examples = ["tensorflow", "matplotlib"]
dev = [
    "pytest", 
    "pytest-cov", 
    "pytest-randomly", 
    "pytest-xdist", 
    "pytest-profiling", 
    "hypothesis", 
    "ruff>=0.4.3", 
    "matplotlib",
    "mypy", 
    "sphinx", 
    "sphinx-rtd-theme",
    "myst-parser",
    "tox"
]

[tool.pytest.ini_options]
testpaths = [
    "tests"
]

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

# Same as Black.
line-length = 88

# Allow unused variables when underscore-prefixed.

# Assume Python 3.10.
target-version = "py310"

[tool.ruff.lint]
# See different rule sets at:
# https://docs.astral.sh/ruff/rules/
select = ["E", "F", "B", "C", "W", "D", "S", "BLE", "A", "COM", "CPY", "Q", "RSE", "TID", "PTH", "ERA"]
ignore = ["D210", "D205", "D100", "S311"]

# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = ["B", "F401", "ERA001"]

dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
extend-select = ["CPY"]
preview = true

[tool.ruff.lint.flake8-copyright]
notice-rgx = """
#
# Copyright 2017-2023 Sandia Corporation.
# Under the terms of Contract DE-AC04-94AL85000 with Sandia Corporation,
# the U.S. Government retains certain rights in this software.
#
# See LICENSE for full license details
#
"""

# Ignore `E402` (import violations) in all `__init__.py` files, and in `path/to/file.py`.
[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["E402", "F401", "D104"]
"api.py" = ["F401"]
"**/algorithms/archive/**" = ["ALL"]
"tests/**" = ["S101", "D103"]

# Models defined usually implement mathematic models defined by a paper,
# which are often single letter variable names. We add this exception as
# the variables are following a mathematical convention.
"simulator/devices/models/custom/*.py" = ["E741"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.pycodestyle]
# Rational: 
# PEP8 requests 80/72 code/docstring widths (https://peps.python.org/pep-0008/)
# Black suggests 88
# -> Adjust doctring widths to 80
max-doc-length = 80

[[tool.mypy.overrides]]
# https://mypy.readthedocs.io/en/stable/config_file.html#the-mypy-configuration-file
module = [
    "cupy",
    "numpy",
    "scipy.*"
]
ignore_missing_imports = true

